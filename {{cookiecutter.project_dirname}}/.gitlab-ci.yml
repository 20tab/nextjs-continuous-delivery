image: node:14-slim

stages:
  - Test
  - Report
  - Pact-publish
  - Pact-check
  - Build
  - Deploy
  - Pact-tag

variables:
  DOCKER_BUILDKIT: 1
  PACT_CONSUMER_NAME: {{cookiecutter.project_slug}}-frontend
  VERSION_BEFORE_REF: $CI_COMMIT_BEFORE_SHA
  VERSION_REF: $CI_COMMIT_SHA

cache:
  paths:
    - node_modules/
    - .yarn

test:
  stage: Test
  image: docker:20
  variables:
    FRONTEND_IMAGE_NAME: "gitlabci_{{cookiecutter.project_slug}}_frontend"
    FRONTEND_IMAGE_TAG: "$CI_JOB_NAME-$CI_JOB_ID"
    FRONTEND_CONTAINER_NAME: "$CI_PROJECT_PATH_SLUG-$CI_JOB_NAME-$CI_JOB_ID_frontend"
  script:
    - docker build --tag=$FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_TAG --target=test .
    - docker run --name=$FRONTEND_CONTAINER_NAME $FRONTEND_IMAGE_NAME:$FRONTEND_IMAGE_TAG
    - docker cp $FRONTEND_CONTAINER_NAME:/app/coverage .
    - docker cp $FRONTEND_CONTAINER_NAME:/app/__tests__/pacts .
  after_script:
    - docker stop $FRONTEND_CONTAINER_NAME
    - docker container rm $FRONTEND_CONTAINER_NAME
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage
      - pacts
    expire_in: 1 day

pages:
  stage: Report
  image: busybox
  script:
    - mv coverage/lcov-report/* public
  artifacts:
    paths:
      - public
  dependencies:
    - test

publish:
  stage: Pact-publish
  image:
    name: docker:20
  before_script:
    - if [ "$CI_COMMIT_BRANCH" ]; then PACT_CONSUMER_TAG="branch:$CI_COMMIT_BRANCH"; else PACT_CONSUMER_TAG="tag:$CI_COMMIT_TAG"; fi
  script:
    - >
      docker run --rm
      -e PACT_BROKER_BASE_URL
      -e PACT_BROKER_PASSWORD
      -e PACT_BROKER_USERNAME
      -v $PWD/pacts:/pacts
      pactfoundation/pact-cli:latest-node14 pact-broker publish /pacts
      --consumer-app-version=$VERSION_REF
      --tag=$PACT_CONSUMER_TAG
  dependencies:
    - test

.can-i-deploy:
  stage: Pact-check
  allow_failure: false
  dependencies:
    - publish
  image:
    name: docker:20
  script:
    - >
      docker run --rm
      -e PACT_BROKER_BASE_URL
      -e PACT_BROKER_PASSWORD
      -e PACT_BROKER_USERNAME
      pactfoundation/pact-cli:latest-node14 pact-broker can-i-deploy
      --pacticipant $PACT_CONSUMER_NAME
      --version $VERSION_REF
      --to "env:$DEPLOY_ENV"

can-i-deploy_development:
  extends: .can-i-deploy
  variables:
    DEPLOY_ENV: development
  only:
    - develop

can-i-deploy_integration:
  extends: .can-i-deploy
  variables:
    DEPLOY_ENV: integration
  only:
    - master

can-i-deploy_production:
  extends: .can-i-deploy
  variables:
    DEPLOY_ENV: production
  only:
    - tags

build:
  stage: Build
  image: docker:20
  services:
    - docker:20-dind
  before_script:
    - export DOCKER_CONFIG=$PWD/.dockerconfig
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$VERSION_REF --target remote --pull .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$VERSION_REF
  after_script:
    - docker logout $CI_REGISTRY
  only:
    - develop
    - master
    - tags

.deploy-base:
  stage: Deploy
  image:
    name: docker:20
  script:
    - >
      docker run --rm -v $PWD:/app -v $KUBE_CA_PEM_FILE:$KUBE_CA_PEM_FILE
      -e KUBECONFIG=/tmp/.kube/config
      -e DEPLOY_VERSION
      -e CI_ENVIRONMENT_SLUG
      -e KUBE_CA_PEM_FILE
      -e KUBE_TOKEN
      -e KUBE_URL
      --entrypoint=""
      bitnami/kubectl:latest /app/scripts/deploy.sh

.deploy:
  extends: .deploy-base
  before_script:
    - export DEPLOY_VERSION=$VERSION_REF

.rollback:
  extends: .deploy-base
  before_script:
    - export DEPLOY_VERSION=$VERSION_BEFORE_REF

deploy_development:
  environment:
    name: development
  extends: .deploy
  only:
    - develop

rollback_development:
  environment:
    name: development
  extends: .rollback
  only:
    - develop
  when: manual

deploy_integration:
  environment:
    name: integration
  extends: .deploy
  only:
    - master

rollback_integration:
  environment:
    name: integration
  extends: .rollback
  only:
    - master
  when: manual

deploy_production:
  environment:
    name: production
  extends: .deploy
  only:
    - tags

rollback_production:
  environment:
    name: production
  extends: .rollback
  only:
    - tags
  when: manual

.create-version-tag:
  image:
    name: docker:20
  stage: Pact-tag
  except:
    - triggers


create-version-tag_development:
  extends: .create-version-tag
  script:
    - >
      docker run --rm
      -e PACT_BROKER_BASE_URL
      -e PACT_BROKER_PASSWORD
      -e PACT_BROKER_USERNAME
      pactfoundation/pact-cli:latest-node14 pact-broker create-version-tag
      --pacticipant $PACT_CONSUMER_NAME
      --version $VERSION_REF
      --tag "env:development"
  only:
    - develop

create-version-tag_integration:
  extends: .create-version-tag
  script:
    - >
      docker run --rm
      -e PACT_BROKER_BASE_URL
      -e PACT_BROKER_PASSWORD
      -e PACT_BROKER_USERNAME
      pactfoundation/pact-cli:latest-node14 pact-broker create-version-tag
      --pacticipant $PACT_CONSUMER_NAME
      --version $VERSION_REF
      --tag "env:integration"
  only:
    - master

create-version-tag_production:
  extends: .create-version-tag
  script:
    - >
      docker run --rm
      -e PACT_BROKER_BASE_URL
      -e PACT_BROKER_PASSWORD
      -e PACT_BROKER_USERNAME
      pactfoundation/pact-cli:latest-node14 pact-broker create-version-tag
      --pacticipant $PACT_CONSUMER_NAME
      --version $VERSION_REF
      --tag "env:production"
  only:
    - tags
