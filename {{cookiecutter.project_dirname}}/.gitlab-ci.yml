image: node:14-slim

stages:
  - Test
  - Report
  - Build
  - Deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  VERSION_BEFORE_REF: $CI_COMMIT_BEFORE_SHA
  VERSION_REF: $CI_COMMIT_SHA

cache:
  paths:
    - node_modules/
    - .yarn

test:
  stage: Test
  image: node:14-slim
  before_script:
    - "yarn install"
  script:
    - "yarn test --coverage --color"
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage
    expire_in: 1 day

pages:
  stage: Report
  image: busybox
  script:
    - mv coverage/lcov-report/* public
  artifacts:
    paths:
      - public
  dependencies:
    - test

build:
  stage: Build
  image: docker:20
  services:
    - docker:20-dind
  before_script:
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$VERSION_REF --pull -f docker/remote.Dockerfile ."
    - "docker push $CI_REGISTRY/$CI_PROJECT_PATH:$VERSION_REF"
  after_script:
    - "docker logout $CI_REGISTRY"
  only:
    - develop
    - master
    - tags

.deploy:
  stage: Deploy
  image:
    name: bitnami/kubectl:1.19
    entrypoint: [""]
  before_script:
    - kubectl config set-cluster my-cluster --server=${KUBE_URL} --certificate-authority="${KUBE_CA_PEM_FILE}"
    - kubectl config set-credentials admin --token=${KUBE_TOKEN}
    - kubectl config set-context my-context --cluster=my-cluster --user=admin --namespace=default
    - kubectl config use-context my-context

deploy_development:
  extends: .deploy
  environment:
    name: development
  script:
    - sed -i "s/__IMAGE_TAG__/$VERSION_REF/" k8s/development/frontend.yaml
    - kubectl apply -f k8s/development/frontend.yaml
  only:
    - develop

deploy_integration:
  extends: .deploy
  environment:
    name: integration
  script:
    - sed -i "s/__IMAGE_TAG__/$VERSION_REF/" k8s/integration/frontend.yaml
    - kubectl apply -f k8s/integration/frontend.yaml
  only:
    - master

deploy_production:
  extends: .deploy
  environment:
    name: production
  script:
    - sed -i "s/__IMAGE_TAG__/$VERSION_REF/" k8s/production/frontend.yaml
    - kubectl apply -f k8s/production/frontend.yaml
  only:
    - tags

rollback_development:
  extends: .deploy
  environment:
    name: development
  script:
    - sed -i "s/__IMAGE_TAG__/$VERSION_BEFORE_REF/" k8s/development/frontend.yaml
    - kubectl apply -f k8s/development/frontend.yaml
  only:
    - develop
  when: manual

rollback_integration:
  extends: .deploy
  environment:
    name: integration
  script:
    - sed -i "s/__IMAGE_TAG__/$VERSION_BEFORE_REF/" k8s/integration/frontend.yaml
    - kubectl apply -f k8s/integration/frontend.yaml
  only:
    - master
  when: manual

rollback_production:
  extends: .deploy
  environment:
    name: production
  script:
    - sed -i "s/__IMAGE_TAG__/$VERSION_BEFORE_REF/" k8s/production/frontend.yaml
    - kubectl apply -f k8s/production/frontend.yaml
  only:
    - tags
  when: manual
